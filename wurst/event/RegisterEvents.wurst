package RegisterEvents
import NoWurst
import _Handles
import HashMap

/*****PlayerUnitEvent*****/

trigger array t

public function registerPlayerUnitEvent(playerunitevent p, code c)
	int hid = p.getHandleId()
	if t[hid] == null
		t[hid] = CreateTrigger()
		for k = 15 downto 0
			t[hid].registerPlayerUnitEvent(players[k], p, null)
	
	t[hid].addCondition(Filter(c))

public function registerPlayerUnitEventForPlayer(playerunitevent p, code c, player pl)
	int i = 16 * p.getHandleId() + pl.getId()
	if t[i] == null
		t[i] = CreateTrigger()
		t[i].registerPlayerUnitEvent(pl, p, null)
	t[i].addCondition(Filter(c))

public function getPlayerUnitEventTrigger(playerunitevent p) returns trigger
	return t[GetHandleId(p)]

/*****SpellEffectEvent*****/

HashMap<int, trigger> onCastMap = new HashMap<int, trigger>()
 
init
	registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_EFFECT, () -> (onCastMap.get(GetSpellAbilityId())).evaluate())
 
public function registerSpellEffectEvent(int abil, code onCast)
	if not onCastMap.has(abil)
		onCastMap.put(abil, CreateTrigger())
	onCastMap.get(abil).addCondition(Filter(onCast))
